<%- include ("partials/header") %>
<div class="container">
  <div class="bc-icons">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"> <a class="text-gray-700" href="/rank">Rank</a></li>
        <li><i class="fas fa-angle-double-right mx-2 text-gray-700" aria-hidden="true"></i></li>
        <li class="breadcrumb-item"> <a class="text-gray-700"
            href="/data-rank?contest_id=<%= contest_id %>"><%= contest_name %></a></li>
        <li><i class="fas fa-angle-double-right mx-2 text-gray-700" aria-hidden="true"></i></li>
        <li class="breadcrumb-item text-gray-700 font-italic"><%= rollnumber %></li>
      </ol>
    </nav>
  </div>
  <table class="table table-hover" id="dataTableRankDetail">
    <thead>
      <tr>
        <th>#</th>
        <th>Submit Time</th>
        <th>Problem</th>
        <th>Language</th>
        <th>Time</th>
        <th>Memory</th>
        <th>TestCase</th>
        <th>Format</th>
        <th>Comment</th>
        <th>Plagiarism</th>
        <th>Score</th>
      </tr>
    </thead>
    <tbody>
      <% 
            var configContent = fs.readFileSync(storage.TESTCASE + contest_name + '/config.txt', 'utf8')
            var logcontent = ''
            var baicontent = ''
            <!-- declare variables for config file -->
		        var checkFormat = configContent.split('\n')[2].split('=')[1]
            var minusFormat = configContent.split('\n')[3]
		        var checkCmt = configContent.split('\n')[4].split('=')[1]
		        var checkCmtMode = configContent.split('\n')[5].split('=')[1]
		        var percentCmtAcp = configContent.split('\n')[6]
		        var minusPoint = configContent.split('\n')[7]
		        var minusPercent = configContent.split('\n')[7]
            var checkPlagiarism = configContent.split('\n')[8].split('=')[1]
            var plagiarismAcp = configContent.split('\n')[9]
            
            for (let i = 0; i < log_files.length; ++i) {
                var tmp_Rollnumber = bailam[i].split('][')[3]
                var mtime = fs.existsSync(bailam[i]) ? fs.statSync(bailam[i]).mtime : 0
                var tenbai = bailam[i].split('][')[4].replace('].', '.')
                var filedate = dayjs(mtime).format('DD-MM-YYYY, HH:mm:ss')
                var baicontent = fs.existsSync(bailam[i]) ? fs.readFileSync(bailam[i], 'utf8') : ""
                var testcase = ''
                var score = 0
                var timeLimit = '0s'
                var memoryLimit = '0MB'
                var format = ''
                var comment = ''
                var plagiarism = ''
                var plagiarismPercent = 0;
                var detectedFile = ''
                var n = 0
                var d = 0
                
                var origStartLine = []
                var origEndLine = []
                var detectedStartLine = []
                var detectedEndLine = []

                logcontent = fs.existsSync(storage.NOPBAI + 'Logs/' + contest_name + '/' + log_files[i]) ? fs.readFileSync(storage.NOPBAI + 'Logs/' + contest_name + '/' + log_files[i], 'utf8') : ""
                if(tmp_Rollnumber == rollnumber) {

                if (logcontent.split('\n')[0].includes('Error') || logcontent.split('\n')[0] == "0.0") {
                    testcase = '0/' + testcase_size[i]
                    score = 0
                    format = 'NaN'
                    comment = 'NaN'
                    plagiarism = '0'
                } else {
                    testcase = parseInt(logcontent.split('\n')[0] * testcase_size[i] / 10) + '/' + testcase_size[i]
                    score = logcontent.split('\n')[0]
                    if (logcontent.split('\n')[1].split(': ')[1] > 1000) {
                        timeLimit = '> 1s'
                    } else {
                        timeLimit = (logcontent.split('\n')[1].split(': ')[1] / 1000).toFixed(2) + 's'
                    }
                    if (logcontent.split('\n')[2].split(': ')[1] > 1000) {
                        memoryLimit = '> 1000MB'
                    } else {
                        memoryLimit = logcontent.split('\n')[2].split(': ')[1] + 'MB'
                    }
                    
                    if(logcontent.split('\n')[3].split(': ')[1] == 'false') {
                      format = 'No'
                    } else if (logcontent.split('\n')[3].split(': ')[1] == 'true') {
                      format = 'Yes'
                    } else {
                      format = 'NaN'
                    }
                    if(logcontent.split('\n')[4].split(': ')[1] >= 0) {
                      comment = logcontent.split('\n')[4].split(': ')[1]
                    } else {
                      comment = 'NaN'
                    }
                    plagiarismPercent = logcontent.split('\n')[5].split(': ')[1]
                    plagiarism =  plagiarismPercent
                    if (plagiarismPercent > 0) {
                      detectedFile = logcontent.split('\n')[6]
                      var detectedFileContent = fs.existsSync(detectedFile) ? fs.readFileSync(detectedFile, 'utf8') : ""
                      n = logcontent.split('\n')[7]
                      var k = 8
                      for (let j = 0; j < n; j++) {
                        origStartLine.push(logcontent.split('\n')[k].split(' ')[0])
                        origEndLine.push(logcontent.split('\n')[k++].split(' ')[1])
                        detectedStartLine.push(logcontent.split('\n')[k].split(' ')[0])
                        detectedEndLine.push(logcontent.split('\n')[k++].split(' ')[1])
                      }
                    }
                }
            %>
      <tr href="#" data-toggle="modal" data-target="#myModal<%=i%>">
        <td>
          <%=i+1%>
        </td>
        <td>
          <%=filedate%>
        </td>
        <td>
          <%=tenbai.split('.')[0]%>
        </td>
        <td>
          <%=tenbai.split('.')[1].toUpperCase()%>
        </td>
        <td>
          <%=timeLimit%>
        </td>
        <td>
          <%=memoryLimit%>
        </td>
        <td>
          <%=testcase%>
        </td>
        <%
          if (format == 'NaN') {
        %>
        <td class="text-danger font-weight-bold">
          <%=format%>
          </td>
        <%    
          } else {
        %>
        <td>
        <i class="<%=format=='No'?'fas fa-times-circle text-danger':'fas fa-check-circle text-success'%>"></i>
      </td>
        <%
          }
        %>
        <%
                if (comment >= percentCmtAcp) {
              %>
              <td class="text-success font-weight-bold">
                <%=comment%>%
              </td>
              <%
                } else if (comment == 'NaN') {
              %>
              <td class="text-danger font-weight-bold">
                <%=comment%>
              </td>
              <%
                } else {
              %>
              <td class="text-danger font-weight-bold">
                <%=comment%>%
              </td>
              <%
            }
              %>
              <%
                if (parseFloat(plagiarism) >= parseFloat(plagiarismAcp)) {
              %>
              <td class="text-danger font-weight-bold">
                <%=plagiarism%>%
              </td>
              <%    
                } else {
              %>
              <td class="text-success font-weight-bold">
                <%=plagiarism%>%
              </td>
              <%
                }
              %>
              <%
                if (parseFloat(plagiarism) >= parseFloat(plagiarismAcp)) {
                  score = 0;
                } else {
                  if(format == 'No'){
                    score -=minusFormat;
                  }
                  if (comment < percentCmtAcp) {
                    if (checkCmtMode == 'Fixed') {
                      score = score - minusPoint;
                    } else {
                      score = score - (score * minusPercent * 0.01);
                    }
                  }
                }

              %>
        <td>
          <%
          var tmp = ''
          var pen = []
          var tmp_pen = {}
          var tmp_maxtimes = []
          
          <!-- set default of tmp_pen -->
          for (let i = 0, l = debai.length; i < l; ++i) { 
            tmp_pen[debai[i]] = -1
          }
          for (let i = 0, l = log_files.length; i < l; ++i) {
            tmp = log_files[i].split('][')[log_files[i].split('][').length - 1].split('].')[0] //get name of problem
            tmp_pen[tmp]++;
            tmp_maxtimes.push(maxtimes[tmp])
          }
          <!-- Because it read file order by time descrease, so the first have the most penaty value -->
          for (let i = 0, l = log_files.length; i < l; ++i) {
              tmp = log_files[i].split('][')[log_files[i].split('][').length - 1].split('].')[0] //get name of problem
             
                pen.push(tmp_pen[tmp]--)
          }
          <!-- caculate the score with penaty -->
            score = score * (tmp_maxtimes[i] - pen[i]) / tmp_maxtimes[i]
          if(score < 0){
            score = 0;
          }
          %>
          <%=score%>
        </td>
      </tr>
      <div class="modal fade" id="myModal<%=i%>">
        <div class="modal-dialog modal-xl">
          <div class="modal-content">
            <div class="modal-header">
              <h4 class="modal-title"><%= filedate %> - <%= tenbai %></h4>
              <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
              <div class="row">
              	<div class="col">
                  Submission
                  <div id="editorbai<%=i%>" style="height: 360px;"><%= baicontent %></div>
                </div>
                <%
                	if (!logcontent.split('\n')[0].includes('Error') && logcontent.split('\n')[5].split(': ')[1] > 0 ) {
                %>
                <div class="col">
                  [<%=detectedFile.split('\\[')[1]%>
                  <div id="editorlog<%=i%>" style="height: 360px;"><%= detectedFileContent %></div>
                </div>
                <%
            	  }
                %>
                <script>
                  if (<%=plagiarismPercent%> > 0) {
                  	var editorlog = ace.edit('editorlog<%=i%>');
                    editorlog.getSession().setMode("ace/mode/c_cpp");
                    editorlog.setOptions({
                      wrap: true,
                      indentedSoftWrap: false,
                      readOnly: true
                    })
                    var editorbai = ace.edit('editorbai<%=i%>');
                    editorbai.getSession().setMode("ace/mode/c_cpp");
                    editorbai.setOptions({
                      readOnly: true
                    })
                    var Range = ace.require('ace/range').Range;
                    for (var j = 0; j < <%=n%>; j++) {
                  	  editorlog.getSession().addMarker(new Range(<%=detectedStartLine[d]%>-1, 0, <%=detectedEndLine[d]%>-1, 1), "myMarker", "ace_line");		
                  	  editorbai.getSession().addMarker(new Range(<%=origStartLine[d]%>-1, 0, <%=origEndLine[d++]%>-1, 1), "myMarker", "ace_line");
                    }
					editorlog.renderer.$cursorLayer.element.style.opacity = 0
                    document.getElementById('editorlog<%=i%>').style.fontSize = '15px';
                    editorbai.renderer.$cursorLayer.element.style.opacity = 0
                    document.getElementById('editorbai<%=i%>').style.fontSize = '15px';
                  } else {
                  	var editorbai = ace.edit('editorbai<%=i%>');
                    editorbai.getSession().setMode("ace/mode/c_cpp");
                    editorbai.setOptions({
                      readOnly: true
                    })
                    editorbai.renderer.$cursorLayer.element.style.opacity = 0
                    document.getElementById('editorbai<%=i%>').style.fontSize = '15px';
                  }
                </script>
              </div>
            </div>
          </div>
        </div>
      </div>
      <% }} %>
    </tbody>
  </table>
</div>
</div>
<script>
  $("#dataTableRankDetail").DataTable({
    searching: false,
    ordering: false,
    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]]
  })
</script>
<%- include ("partials/footer") %>